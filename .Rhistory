library(readxl)
sheets <- excel_sheets("all_data.xlsx")
print(sheets)
data <- read_excel("all_data.xlsx", sheet = sheets[5])
head(data)
all_data <- read_excel("all_data.xlsx", sheet = sheets[5])
head(all_data)
library(dplyr)
data <- all_data %>% select(age, BSSQ_5, ASSQ_5)
head(data)
mutated_data = mutate(data, focus_lvl_diff = ASSQ_5 - BSSQ_5)
head(mutated_data)
ggplot(mutated_data, aes(x=age, y=focus_lvl_diff)) +
geom_point()
library(tidyverse)
ggplot(mutated_data, aes(x=age, y=focus_lvl_diff)) +
geom_point()
library(tidyverse)
ggplot(mutated_data, aes(x=age, y=focus_lvl_diff)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE) +
labs(x="Age",
y="Difference in Focus Level",
title="Age vs ∆ Focus")
library(ggplot2)
# Fitting the model
model = lm(focus_lvl_diff ~ age, data = mutated_data)
# Create residual plot
ggplot(model, aes(x = .fitted, y = .resid)) + # Plotting fitted values and residuals
geom_point() + # Create scatterplot
geom_hline(yintercept = 0, linetype = "dashed", colour = "red") + # Horizontal line at 0
labs(title = "Residuals vs. Fitted Values")
library(readxl)
sheets <- excel_sheets("all_data.xlsx")
print(sheets)
all_data <- read_excel("all_data.xlsx", sheet = sheets[5])
head(all_
ggplot(mutated_data, aes(x=age)) +
geom_histogram()
library(readxl)
sheets <- excel_sheets("all_data.xlsx")
print(sheets)
all_data <- read_excel("all_data.xlsx", sheet = sheets[5])
head(all_
ggplot(mutated_data, aes(x=age)) +
geom_histogram()
ggplot(mutated_data, aes(x=age)) + geom_histogram()
library(readxl)
sheets <- excel_sheets("all_data.xlsx")
print(sheets)
all_data <- read_excel("all_data.xlsx", sheet = sheets[5])
head(all_
library(readxl)
sheets <- excel_sheets("all_data.xlsx")
print(sheets)
all_data <- read_excel("all_data.xlsx", sheet = sheets[5])
head(all_data)
library(dplyr)
data <- all_data %>% select(age, BSSQ_5, ASSQ_5)
head(data)
mutated_data = mutate(data, focus_lvl_diff = ASSQ_5 - BSSQ_5)
head(mutated_data)
library(tidyverse)
ggplot(mutated_data, aes(x=age, y=focus_lvl_diff)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE) +
labs(x="Age",
y="Difference in Focus Level",
title="Age vs ∆ Focus")
library(ggplot2)
# Fitting the model
model = lm(focus_lvl_diff ~ age, data = mutated_data)
# Create residual plot
ggplot(model, aes(x = .fitted, y = .resid)) +
geom_point() +
geom_hline(yintercept = 0, linetype = "dashed", colour = "red") +
labs(title = "Residuals vs. Fitted Values")
ggplot(mutated_data, aes(x=age)) + geom_histogram()
ggplot(mutated_data, aes(x=BSSQ_5, y= Value))
ggplot(mutated_data, aes(x=BSSQ_5, y=ASSQ_5))
ggplot(mutated_data, aes(x=BSSQ_5, y=ASSQ_5)) + geom_bar()
ggplot(mutated_data, aes(x=BSSQ_5)) + geom_bar()
ggplot(mutated_data, aes(x=ASSQ_5)) + geom_bar()
ggplot(mutated_data, aes(x=BSSQ_5)) + geom_bar()
ggplot(mutated_data, aes(x=ASSQ_5)) + geom_bar()
ggplot(mutated_data, aes(x=ASSQ_5)) + geom_bar()
ggplot(mutated_data, aes(x=BSSQ_5)) + geom_bar()
ggplot(mutated_data, aes(x=focus_lvl_diff)) + geom_bar()
library(readxl)
sheets <- excel_sheets("all_data.xlsx")
print(sheets)
all_data <- read_excel("all_data.xlsx", sheet = sheets[5])
head(all_data)
library(dplyr)
data <- all_data %>% select(age, BSSQ_5, ASSQ_5)
head(data)
mutated_data = mutate(data, focus_lvl_diff = ASSQ_5 - BSSQ_5)
head(mutated_data)
library(tidyverse)
ggplot(mutated_data, aes(x=age, y=focus_lvl_diff)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE) +
labs(x="Age",
y="Difference in Focus Level",
title="Age vs ∆ Focus")
library(ggplot2)
# Fitting the model
model = lm(focus_lvl_diff ~ age, data = mutated_data)
# Create residual plot
ggplot(model, aes(x = .fitted, y = .resid)) +
geom_point() +
geom_hline(yintercept = 0, linetype = "dashed", colour = "red") +
labs(title = "Residuals vs. Fitted Values")
ggplot(mutated_data, aes(x=age)) + geom_histogram()
ggplot(mutated_data, aes(x=focus_lvl_diff)) + geom_bar()
library(readxl)
sheets <- excel_sheets("all_data.xlsx")
print(sheets)
all_data <- read_excel("all_data.xlsx", sheet = sheets[5])
head(all_data)
library(dplyr)
data <- all_data %>% select(age, BSSQ_5, ASSQ_5)
head(data)
mutated_data = mutate(data, focus_lvl_diff = ASSQ_5 - BSSQ_5)
head(mutated_data)
library(tidyverse)
ggplot(mutated_data, aes(x=age, y=focus_lvl_diff)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE) +
labs(x="Age",
y="Difference in Focus Level",
title="Age vs ∆ Focus")
library(ggplot2)
# Fitting the model
model = lm(focus_lvl_diff ~ age, data = mutated_data)
# Create residual plot
ggplot(model, aes(x = .fitted, y = .resid)) +
geom_point() +
geom_hline(yintercept = 0, linetype = "dashed", colour = "red") +
labs(title = "Residuals vs. Fitted Values")
ggplot(mutated_data, aes(x=age)) + geom_histogram()
ggplot(mutated_data, aes(x=focus_lvl_diff)) + geom_bar()
set.seed(42)
coin = c('head', 'tail')
tosses = sample(coin, 100, replace=TRUE, prob = c(0.9, 0.1))
summary = table(tosses)
summary
set.seed(42)
coin = c('head', 'tail')
tosses = sample(coin, 100, replace=TRUE, prob = c(0.9, 0.1))
summary = table(tosses)
summary
set.seed(42)
coin = c('head', 'tail')
tosses = sample(coin, 100, replace=TRUE, prob = c(0.9, 0.1))
summary = table(tosses)
summary
set.seed(43)
coin = c('head', 'tail')
tosses = sample(coin, 100, replace=TRUE, prob = c(0.9, 0.1))
summary = table(tosses)
summary
set.seed(42)
coin = c('head', 'tail')
tosses = sample(coin, 100, replace=TRUE, prob = c(0.9, 0.1))
summary = table(tosses)
summary
n = 10
p = 0.3
four_events = dbinom(4, n, p)
three_events_or_less = pbinom(3, n, p)
more_than_five_events = 1-pbinom(4, n, p)
n = 10
p = 0.3
four_events = dbinom(4, n, p)
three_events_or_less = pbinom(3, n, p)
more_than_five_events = 1-pbinom(5, n, p)
library(tidyverse)
library(gganimate)
install.packages("gganimate")
library(tidyverse)
library(gganimate)
library(gifski)
install.packages("gifski")
library(tidyverse)
library(gganimate)
library(gifski)
mtcars$cyl <- as.factor(mtcars$cyl)
p = ggplot(mtcars, aes(x=wt, y=qsec)) +
geom_point()
library(tidyverse)
library(gganimate)
library(gifski)
mtcars$cyl <- as.factor(mtcars$cyl)
p = ggplot(mtcars, aes(x=wt, y=qsec)) +
geom_point() + transition_states(cyl, transition_length = 1, state_length = 1) +
ggtitle("cyl = {closest_state}",
subtitle = "Frame {frame} of {nframes}.") +
enter_fade() + exit_fade()
gganimate(p, renderer = giski_renderer())
library(tidyverse)
library(gganimate)
library(gifski)
mtcars$cyl <- as.factor(mtcars$cyl)
p = ggplot(mtcars, aes(x=wt, y=qsec)) +
geom_point() + transition_states(cyl, transition_length = 1, state_length = 1) +
ggtitle("cyl = {closest_state}",
subtitle = "Frame {frame} of {nframes}.") +
enter_fade() + exit_fade()
gganimate(p, renderer = giski_renderer())
library(tidyverse)
library(gganimate)
library(gifski)
mtcars$cyl <- as.factor(mtcars$cyl)
p = ggplot(mtcars, aes(x=wt, y=qsec)) +
geom_point() + transition_states(cyl, transition_length = 1, state_length = 1) +
ggtitle("cyl = {closest_state}",
subtitle = "Frame {frame} of {nframes}.") +
enter_fade() + exit_fade()
animate(p, renderer = giski_renderer())
library(tidyverse)
library(gganimate)
library(gifski)
mtcars$cyl <- as.factor(mtcars$cyl)
p = ggplot(mtcars, aes(x=wt, y=qsec)) +
geom_point() + transition_states(cyl, transition_length = 1, state_length = 1) +
ggtitle("cyl = {closest_state}",
subtitle = "Frame {frame} of {nframes}.") +
enter_fade() + exit_fade()
animate(p, renderer = gifski_renderer())
