ggplot(model_sunny, aes(x = .fitted, y = .resid)) +
geom_point() +
geom_hline(yintercept = 0, linetype = "dashed", colour = "red") +
labs(title = "Residuals vs. Fitted Values")
library(readxl)
sheets = excel_sheets("all_data.xlsx")
print(sheets)
all_data = read_excel("all_data.xlsx", sheet = sheets[5])
head(all_data)
library(dplyr)
data = all_data %>% select(age, BSSQ_5, ASSQ_5)
head(data)
mutated_data = mutate(data, focus_lvl_diff = ASSQ_5 - BSSQ_5)
head(mutated_data)
library(tidyverse)
# ggplot(mutated_data, aes(x=age, y=focus_lvl_diff, colour = gender)) +
#geom_point() +
#geom_smooth(method = "lm", se = FALSE) +
#labs(x="Age",
#    y="Difference in Focus Level",
#   title="Age vs ∆ Focus")
library(ggplot2)
# Fitting the model
model = lm(focus_lvl_diff ~ age, data = mutated_data)
# Create a residual plot
ggplot(model, aes(x = .fitted, y = .resid)) +
geom_point() +
geom_hline(yintercept = 0, linetype = "dashed", colour = "red") +
labs(title = "Residuals vs. Fitted Values")
ggplot(mutated_data, aes(x=age)) + geom_histogram()
ggplot(mutated_data, aes(x=focus_lvl_diff)) + geom_bar()
ggplot(mutated_data, aes(x=BSSQ_5)) + geom_bar()
ggplot(mutated_data, aes(x=ASSQ_5)) + geom_bar()
pie(mutated_data$env)
pie(mutated_data, env)
pie(mutated_data, env)
pie(mutated_data$env)
pie(as.factor(mutated_data$env))
pie(as.factor(mutated_data$env))
pie(mutated_data$env)
head(mutated_data$env)
library(readxl)
sheets = excel_sheets("all_data.xlsx")
print(sheets)
all_data = read_excel("all_data.xlsx", sheet = sheets[5])
head(all_data)
library(dplyr)
data = all_data %>% select(age, env, BSSQ_5, ASSQ_5)
head(data)
library(tidyverse)
mutated_data = mutate(data, focus_lvl_diff = ASSQ_5 - BSSQ_5)
head(mutated_data)
ggplot(mutated_data, aes(x=age)) + geom_histogram()
ggplot(mutated_data, aes(x=BSSQ_5)) + geom_bar()
ggplot(mutated_data, aes(x=ASSQ_5)) + geom_bar()
ggplot(mutated_data, aes(x=focus_lvl_diff)) + geom_bar()
pie(mutated_data$env)
head(mutated_data$env)
pie(mutated_data$env)
ggplot(mutated_data, aes(x=env)) + geom_bar() + coord_polar()
ggplot(mutated_data, aes(x=env)) + geom_bar() + coord_polar('y', start=0)
ggplot(mutated_data, aes(x=env)) + geom_bar() + coord_polar('y', start=0) + theme_void()
ggplot(mutated_data, aes(x=env)) + geom_bar() + coord_polar('y', start=0)
ggplot(data, aes(x="", y=value, fill=group)) +
geom_bar(stat="identity", width=1) +
coord_polar("y", start=0)
ggplot(mutated_data, aes(x="", y=env)) +
geom_bar(stat="identity", width=1) +
coord_polar("y", start=0)
ggplot(mutated_data, aes(x="", y=env, color=env)) +
geom_bar(stat="identity", width=1) +
coord_polar("y", start=0)
ggplot(mutated_data, aes( y=env, color=env)) +
geom_bar(stat="identity", width=1) +
coord_polar("y", start=0)
ggplot(mutated_data, aes(x="", y=env, color=env)) +
geom_bar(stat="identity", width=1) +
coord_polar("y", start=0)
ggplot(mutated_data, aes(x="lemao", y=env, color=env)) +
geom_bar(stat="identity", width=1) +
coord_polar("y", start=0)
ggplot(mutated_data, aes(x="", y=env, color=env)) +
geom_bar(stat="identity", width=1) +
coord_polar("y", start=0)
mutated_data$env = ifelse(mutated_data$env == 'Sunny', 1 ,0)
mutated_data$env = ifelse(mutated_data$env == 'Sunny', 1 ,0)
head(mutated_data$env)
pie(mutated_data$env)
mutated_data$env = as.factor(ifelse(mutated_data$env == 'Sunny', 1 ,0))
head(mutated_data$env)
pie(table(mutated_data$env))
pie(mutated_data$env)
env_counts <- as.data.frame(table(mutated_data$env))
colnames(env_counts) <- c("Environment", "Count")
# Create a better pie chart
ggplot(env_counts, aes(x="", y=Count, fill=Environment)) +
geom_bar(stat="identity", width=1, color="white") +  # White border for clarity
coord_polar("y", start=0) +
theme_void() +  # Removes background grid
ggtitle("Distribution of Environment") +
scale_fill_manual(values = c("Sunny"="gold", "Snowy"="lightblue")) +  # Custom colors
theme(legend.title = element_blank(), legend.position = "right") +  # Clean legend
geom_text(aes(label = scales::percent(Count/sum(Count), accuracy = 1)),
position = position_stack(vjust=0.5), color="black", size=5)  # Adds percentages
ggplot(mutated_data, aes(x="", y=env, color=env)) +
geom_bar(stat="identity", width=1) +
coord_polar("y", start=0)
library(readxl)
sheets = excel_sheets("all_data.xlsx")
print(sheets)
all_data = read_excel("all_data.xlsx", sheet = sheets[5])
head(all_data)
library(dplyr)
data = all_data %>% select(age, env, BSSQ_5, ASSQ_5)
head(data)
library(tidyverse)
mutated_data = mutate(data, focus_lvl_diff = ASSQ_5 - BSSQ_5)
head(mutated_data)
mutated_data$env = (ifelse(mutated_data$env == 'Sunny', 1 ,0))
head(mutated_data$env)
ggplot(mutated_data, aes(x=age)) + geom_histogram()
ggplot(mutated_data, aes(x=BSSQ_5)) + geom_bar()
ggplot(mutated_data, aes(x=ASSQ_5)) + geom_bar()
ggplot(mutated_data, aes(x=focus_lvl_diff)) + geom_bar()
ggplot(mutated_data, aes(x="", y=env, color=env)) +
geom_bar(stat="identity", width=1) +
coord_polar("y", start=0)
library(tidyverse)
ggplot(mutated_data, aes(x=age, y=focus_lvl_diff)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE) +
labs(x="Age",
y="Difference in Focus Level",
title="Age vs ∆ Focus")
library(ggplot2)
# Fitting the model
model = lm(focus_lvl_diff ~ age, data = mutated_data)
# Create a residual plot
ggplot(model, aes(x = .fitted, y = .resid)) +
geom_point() +
geom_hline(yintercept = 0, linetype = "dashed", colour = "red") +
labs(title = "Residuals vs. Fitted Values")
library(ggplot2)
library(plotly)
p = ggplot(mutated_data, aes(x=age, y=focus_lvl_diff, colour = env)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE) +
labs(x="Age",
y="Difference in Focus Level",
title="Age vs ∆ Focus")
ggplotly(p)
filtered_snowy = filter(mutated_data, env == 'Snowy')
filtered_sunny = filter(mutated_data, env == 'Sunny')
model_snowy = lm(focus_lvl_diff ~ age, data = filtered_snowy)
library(readxl)
sheets = excel_sheets("all_data.xlsx")
print(sheets)
all_data = read_excel("all_data.xlsx", sheet = sheets[5])
head(all_data)
library(dplyr)
data = all_data %>% select(age, env, BSSQ_5, ASSQ_5)
head(data)
library(tidyverse)
mutated_data = mutate(data, focus_lvl_diff = ASSQ_5 - BSSQ_5)
head(mutated_data)
ggplot(mutated_data, aes(x=age)) + geom_histogram()
ggplot(mutated_data, aes(x=BSSQ_5)) + geom_bar()
ggplot(mutated_data, aes(x=ASSQ_5)) + geom_bar()
ggplot(mutated_data, aes(x=focus_lvl_diff)) + geom_bar()
ggplot(mutated_data, aes(x="", y=env, color=env)) +
geom_bar(stat="identity", width=1) +
coord_polar("y", start=0)
library(tidyverse)
ggplot(mutated_data, aes(x=age, y=focus_lvl_diff)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE) +
labs(x="Age",
y="Difference in Focus Level",
title="Age vs ∆ Focus")
library(ggplot2)
# Fitting the model
model = lm(focus_lvl_diff ~ age, data = mutated_data)
# Create a residual plot
ggplot(model, aes(x = .fitted, y = .resid)) +
geom_point() +
geom_hline(yintercept = 0, linetype = "dashed", colour = "red") +
labs(title = "Residuals vs. Fitted Values")
library(ggplot2)
library(plotly)
p = ggplot(mutated_data, aes(x=age, y=focus_lvl_diff, colour = env)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE) +
labs(x="Age",
y="Difference in Focus Level",
title="Age vs ∆ Focus")
ggplotly(p)
filtered_snowy = filter(mutated_data, env == 'Snowy')
filtered_sunny = filter(mutated_data, env == 'Sunny')
model_snowy = lm(focus_lvl_diff ~ age, data = filtered_snowy)
# Create a residual plot
ggplot(model_snowy, aes(x = .fitted, y = .resid)) +
geom_point() +
geom_hline(yintercept = 0, linetype = "dashed", colour = "red") +
labs(title = "Residuals vs. Fitted Values")
model_sunny = lm(focus_lvl_diff ~ age, data = filtered_sunny)
# Create a residual plot
ggplot(model_sunny, aes(x = .fitted, y = .resid)) +
geom_point() +
geom_hline(yintercept = 0, linetype = "dashed", colour = "red") +
labs(title = "Residuals vs. Fitted Values")
library(readxl)
sheets = excel_sheets("all_data.xlsx")
print(sheets)
all_data = read_excel("all_data.xlsx", sheet = sheets[5])
head(all_data)
library(dplyr)
data = all_data %>% select(age, BSSQ_5, ASSQ_5)
head(data)
mutated_data = mutate(data, focus_lvl_diff = ASSQ_5 - BSSQ_5)
head(mutated_data)
library(tidyverse)
# ggplot(mutated_data, aes(x=age, y=focus_lvl_diff, colour = gender)) +
#geom_point() +
#geom_smooth(method = "lm", se = FALSE) +
#labs(x="Age",
#    y="Difference in Focus Level",
#   title="Age vs ∆ Focus")
library(ggplot2)
# Fitting the model
model = lm(focus_lvl_diff ~ age, data = mutated_data)
# Create a residual plot
ggplot(model, aes(x = .fitted, y = .resid)) +
geom_point() +
geom_hline(yintercept = 0, linetype = "dashed", colour = "red") +
labs(title = "Residuals vs. Fitted Values")
ggplot(mutated_data, aes(x=age)) + geom_histogram()
ggplot(mutated_data, aes(x=focus_lvl_diff)) + geom_bar()
ggplot(mutated_data, aes(x=age)) + geom_histogram() + stat_function(fun = dnorm,
args = list(mean = mean(mutated_data$age), sd = sd(mutated_data$age)))
ggplot(mutated_data, aes(x=age)) + geom_histogram(aes(y = after_stat(density)) + stat_function(fun = dnorm,
args = list(mean = mean(mutated_data$age), sd = sd(mutated_data$age)))
ggplot(mutated_data, aes(x = age)) +
geom_histogram(aes(y = after_stat(density)), bins = 10, color = "blue", fill = "lightblue") +
stat_function(fun = dnorm,
args = list(mean = mean(mutated_data$age), sd = sd(mutated_data$age)))
ggplot(mutated_data, aes(x = age)) +
geom_histogram(aes(y = after_stat(density)), bins = 30, color = "blue", fill = "lightblue") +
stat_function(fun = dnorm,
args = list(mean = mean(mutated_data$age), sd = sd(mutated_data$age)))
ggplot(mutated_data, aes(x = age)) +
geom_histogram(aes(y = after_stat(density)), bins = 15, color = "blue", fill = "lightblue") +
stat_function(fun = dnorm,
args = list(mean = mean(mutated_data$age), sd = sd(mutated_data$age)))
ggplot(mutated_data, aes(x = age)) +
geom_histogram(aes(y = after_stat(density)), bins = 15, color = "red", fill = "orange") +
stat_function(fun = dnorm,
args = list(mean = mean(mutated_data$age), sd = sd(mutated_data$age)))
library(tidyverse)
mutated_data = mutate(data, focus_lvl_diff = ASSQ_5 - BSSQ_5)
mutated_data = na.omit(mutated_data)
head(mutated_data)
library(readxl)
sheets = excel_sheets("all_data.xlsx")
print(sheets)
all_data = read_excel("all_data.xlsx", sheet = sheets[5])
head(all_data)
library(dplyr)
data = all_data %>% select(age, env, BSSQ_5, ASSQ_5)
head(data)
library(tidyverse)
mutated_data = mutate(data, focus_lvl_diff = ASSQ_5 - BSSQ_5)
mutated_data = na.omit(mutated_data)
head(mutated_data)
ggplot(mutated_data, aes(x = age)) +
geom_histogram(aes(y = after_stat(density)), bins = 15, color = "red", fill = "orange") +
stat_function(fun = dnorm,
args = list(mean = mean(mutated_data$age), sd = sd(mutated_data$age)))
ggplot(mutated_data, aes(x=BSSQ_5)) + geom_bar()
ggplot(mutated_data, aes(x=ASSQ_5)) + geom_bar()
ggplot(mutated_data, aes(x=focus_lvl_diff)) + geom_bar()
ggplot(mutated_data, aes(x="", y=env, color=env)) +
geom_bar(stat="identity", width=1) +
coord_polar("y", start=0)
library(tidyverse)
ggplot(mutated_data, aes(x=age, y=focus_lvl_diff)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE) +
labs(x="Age",
y="Difference in Focus Level",
title="Age vs ∆ Focus")
library(ggplot2)
# Fitting the model
model = lm(focus_lvl_diff ~ age, data = mutated_data)
# Create a residual plot
ggplot(model, aes(x = .fitted, y = .resid)) +
geom_point() +
geom_hline(yintercept = 0, linetype = "dashed", colour = "red") +
labs(title = "Residuals vs. Fitted Values")
library(ggplot2)
library(plotly)
p = ggplot(mutated_data, aes(x=age, y=focus_lvl_diff, colour = env)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE) +
labs(x="Age",
y="Difference in Focus Level",
title="Age vs ∆ Focus")
ggplotly(p)
filtered_snowy = filter(mutated_data, env == 'Snowy')
filtered_sunny = filter(mutated_data, env == 'Sunny')
model_snowy = lm(focus_lvl_diff ~ age, data = filtered_snowy)
# Create a residual plot
ggplot(model_snowy, aes(x = .fitted, y = .resid)) +
geom_point() +
geom_hline(yintercept = 0, linetype = "dashed", colour = "red") +
labs(title = "Residuals vs. Fitted Values")
model_sunny = lm(focus_lvl_diff ~ age, data = filtered_sunny)
# Create a residual plot
ggplot(model_sunny, aes(x = .fitted, y = .resid)) +
geom_point() +
geom_hline(yintercept = 0, linetype = "dashed", colour = "red") +
labs(title = "Residuals vs. Fitted Values")
library(readxl)
sheets = excel_sheets("all_data.xlsx")
print(sheets)
all_data = read_excel("all_data.xlsx", sheet = sheets[5])
head(all_data)
library(dplyr)
data = all_data %>% select(age, BSSQ_5, ASSQ_5)
head(data)
mutated_data = mutate(data, focus_lvl_diff = ASSQ_5 - BSSQ_5)
head(mutated_data)
library(tidyverse)
# ggplot(mutated_data, aes(x=age, y=focus_lvl_diff, colour = gender)) +
#geom_point() +
#geom_smooth(method = "lm", se = FALSE) +
#labs(x="Age",
#    y="Difference in Focus Level",
#   title="Age vs ∆ Focus")
library(ggplot2)
# Fitting the model
model = lm(focus_lvl_diff ~ age, data = mutated_data)
# Create a residual plot
ggplot(model, aes(x = .fitted, y = .resid)) +
geom_point() +
geom_hline(yintercept = 0, linetype = "dashed", colour = "red") +
labs(title = "Residuals vs. Fitted Values")
ggplot(mutated_data, aes(x=age)) + geom_histogram()
ggplot(mutated_data, aes(x=focus_lvl_diff)) + geom_bar()
Pie1=select(mutated_data, env)
library(readxl)
sheets = excel_sheets("all_data.xlsx")
print(sheets)
all_data = read_excel("all_data.xlsx", sheet = sheets[5])
head(all_data)
library(dplyr)
data = all_data %>% select(age, env, BSSQ_5, ASSQ_5)
head(data)
library(tidyverse)
mutated_data = mutate(data, focus_lvl_diff = ASSQ_5 - BSSQ_5)
mutated_data = na.omit(mutated_data)
head(mutated_data)
ggplot(mutated_data, aes(x = age)) +
geom_histogram(aes(y = after_stat(density)), bins = 15, color = "red", fill = "orange") +
stat_function(fun = dnorm,
args = list(mean = mean(mutated_data$age), sd = sd(mutated_data$age)))
ggplot(mutated_data, aes(x=BSSQ_5)) + geom_bar()
ggplot(mutated_data, aes(x=ASSQ_5)) + geom_bar()
ggplot(mutated_data, aes(x=focus_lvl_diff)) + geom_bar()
Pie1=select(mutated_data, env)
data_agg <- Pie1 %>%
count(env)
colors <- brewer.pal(n = length(unique(Pie1$env)), name = "Blues")
library(RColorBrewer)
Pie1=select(mutated_data, env)
data_agg <- Pie1 %>%
count(env)
colors <- brewer.pal(n = length(unique(Pie1$env)), name = "Blues")
fig <- plot_ly(data_agg, labels = ~env, values = ~n, type = 'pie', marker = list(colors = colors))
fig <- fig %>% layout(title = 'Distribution of Environment',
showlegend = TRUE)
fig
library(readxl)
sheets = excel_sheets("all_data.xlsx")
print(sheets)
all_data = read_excel("all_data.xlsx", sheet = sheets[5])
head(all_data)
library(dplyr)
data = all_data %>% select(age, env, BSSQ_5, ASSQ_5)
head(data)
library(tidyverse)
mutated_data = mutate(data, focus_lvl_diff = ASSQ_5 - BSSQ_5)
mutated_data = na.omit(mutated_data)
head(mutated_data)
ggplot(mutated_data, aes(x = age)) +
geom_histogram(aes(y = after_stat(density)), bins = 15, color = "red", fill = "orange") +
stat_function(fun = dnorm,
args = list(mean = mean(mutated_data$age), sd = sd(mutated_data$age)))
ggplot(mutated_data, aes(x=BSSQ_5)) + geom_bar()
ggplot(mutated_data, aes(x=ASSQ_5)) + geom_bar()
ggplot(mutated_data, aes(x=focus_lvl_diff)) + geom_bar()
library(RColorBrewer)
Pie1=select(mutated_data, env)
data_agg <- Pie1 %>%
count(env)
colors <- brewer.pal(n = length(unique(Pie1$env)), name = "Blues")
fig <- plot_ly(data_agg, labels = ~env, values = ~n, type = 'pie', marker = list(colors = colors))
library(ggplot2)
# Fitting the model
model = lm(focus_lvl_diff ~ age, data = mutated_data)
# Create a residual plot
ggplot(model, aes(x = .fitted, y = .resid)) +
geom_point() +
geom_hline(yintercept = 0, linetype = "dashed", colour = "red") +
labs(title = "Residuals vs. Fitted Values")
library(RColorBrewer)
Pie1=select(mutated_data, env)
data_agg <- Pie1 %>%
count(env)
colors <- brewer.pal(n = length(unique(Pie1$env)), name = "Blues")
fig <- plot_ly(data_agg, labels = ~env, values = ~n, type = 'pie', marker = list(colors = colors))
?plot_ly
??plot_ly
??plot_ly
library(RColorBrewer)
library(plotly)
Pie1=select(mutated_data, env)
data_agg <- Pie1 %>%
count(env)
colors <- brewer.pal(n = length(unique(Pie1$env)), name = "Blues")
fig <- plot_ly(data_agg, labels = ~env, values = ~n, type = 'pie', marker = list(colors = colors))
fig <- fig %>% layout(title = 'Distribution of Environment',
showlegend = TRUE)
fig
library(readxl)
sheets = excel_sheets("all_data.xlsx")
print(sheets)
all_data = read_excel("all_data.xlsx", sheet = sheets[5])
head(all_data)
library(dplyr)
data = all_data %>% select(age, env, BSSQ_5, ASSQ_5)
head(data)
library(tidyverse)
mutated_data = mutate(data, focus_lvl_diff = ASSQ_5 - BSSQ_5)
mutated_data = na.omit(mutated_data)
head(mutated_data)
ggplot(mutated_data, aes(x = age)) +
geom_histogram(aes(y = after_stat(density)), bins = 15, color = "red", fill = "orange") +
stat_function(fun = dnorm,
args = list(mean = mean(mutated_data$age), sd = sd(mutated_data$age)))
ggplot(mutated_data, aes(x=BSSQ_5)) + geom_bar()
ggplot(mutated_data, aes(x=ASSQ_5)) + geom_bar()
ggplot(mutated_data, aes(x=focus_lvl_diff)) + geom_bar()
library(RColorBrewer)
library(plotly)
Pie1=select(mutated_data, env)
data_agg <- Pie1 %>%
count(env)
colors <- brewer.pal(n = length(unique(Pie1$env)), name = "Blues")
fig <- plot_ly(data_agg, labels = ~env, values = ~n, type = 'pie', marker = list(colors = colors))
fig <- fig %>% layout(title = 'Distribution of Environment',
showlegend = TRUE)
fig
library(tidyverse)
ggplot(mutated_data, aes(x=age, y=focus_lvl_diff)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE) +
labs(x="Age",
y="Difference in Focus Level",
title="Age vs ∆ Focus")
library(ggplot2)
# Fitting the model
model = lm(focus_lvl_diff ~ age, data = mutated_data)
# Create a residual plot
ggplot(model, aes(x = .fitted, y = .resid)) +
geom_point() +
geom_hline(yintercept = 0, linetype = "dashed", colour = "red") +
labs(title = "Residuals vs. Fitted Values")
library(ggplot2)
library(plotly)
p = ggplot(mutated_data, aes(x=age, y=focus_lvl_diff, colour = env)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE) +
labs(x="Age",
y="Difference in Focus Level",
title="Age vs ∆ Focus")
ggplotly(p)
filtered_snowy = filter(mutated_data, env == 'Snowy')
filtered_sunny = filter(mutated_data, env == 'Sunny')
model_snowy = lm(focus_lvl_diff ~ age, data = filtered_snowy)
# Create a residual plot
ggplot(model_snowy, aes(x = .fitted, y = .resid)) +
geom_point() +
geom_hline(yintercept = 0, linetype = "dashed", colour = "red") +
labs(title = "Residuals vs. Fitted Values")
model_sunny = lm(focus_lvl_diff ~ age, data = filtered_sunny)
# Create a residual plot
ggplot(model_sunny, aes(x = .fitted, y = .resid)) +
geom_point() +
geom_hline(yintercept = 0, linetype = "dashed", colour = "red") +
labs(title = "Residuals vs. Fitted Values")
library(dplyr)
data = all_data %>% select(age, BSSQ_5, ASSQ_5)
head(data)
mutated_data = mutate(data, focus_lvl_diff = ASSQ_5 - BSSQ_5)
head(mutated_data)
library(tidyverse)
# ggplot(mutated_data, aes(x=age, y=focus_lvl_diff, colour = gender)) +
#geom_point() +
#geom_smooth(method = "lm", se = FALSE) +
#labs(x="Age",
#    y="Difference in Focus Level",
#   title="Age vs ∆ Focus")
